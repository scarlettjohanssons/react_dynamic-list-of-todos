{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","query","sortBy","queryChange","event","setState","target","value","showFilter","this","props","todos","selectedUser","selectedUserId","visibleTodos","filter","todo","title","includes","completed","className","type","onChange","placeholder","map","key","id","readOnly","userId","onClick","React","Component","request","url","fetch","then","result","ok","Error","status","statusText","json","CurrentUser","user","loadUser","prevProps","a","data","name","email","phone","App","ReactDOM","render","document","getElementById"],"mappings":"4UAIaA,G,kBAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,OAAQ,OAHZ,EAMEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,OAAOC,SAPxC,EAUEC,WAAa,SAACJ,GACZ,EAAKC,SAAS,CAAEH,OAAQE,EAAME,OAAOC,SAXzC,4CAcE,WAAU,IAAD,OACP,EAAgDE,KAAKC,MAA7CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,eAEzBC,EAAeH,EAAMI,QACvB,SAAAC,GAAI,OAAIA,EAAKC,OAASD,EAAKC,MAAMC,SAAS,EAAKlB,MAAMC,UAWvD,MAR0B,WAAtBQ,KAAKT,MAAME,SACbY,EAAeA,EAAaC,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKG,cAGxB,cAAtBV,KAAKT,MAAME,SACbY,EAAeA,EAAaC,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKG,cAIhD,yBAAKC,UAAU,YACb,sCAEA,2BACEC,KAAK,OACLd,MAAOE,KAAKT,MAAMC,MAClBqB,SAAUb,KAAKN,YACfoB,YAAY,oBAEd,4BACEhB,MAAOE,KAAKT,MAAME,OAClBoB,SAAUb,KAAKD,YAEf,4BAAQD,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,cAGF,yBAAKa,UAAU,4BACb,wBAAIA,UAAU,kBACXN,EAAaU,KAAI,SAAAR,GAAI,OACpB,wBACES,IAAKT,EAAKU,GACVN,UAAS,yBAAoBJ,EAAKG,UAC9B,0BACA,8BAEJ,+BACE,2BAAOE,KAAK,WAAWM,UAAQ,IAC/B,2BAAIX,EAAKC,QAGVJ,IAAmBG,EAAKY,OACvB,4BACER,UAAU,iEAKVC,KAAK,UANP,YASGL,EAAKY,QAGR,4BACER,UAAU,iCAIVC,KAAK,SACLQ,QAAS,WACPjB,EAAaI,EAAKY,UAPtB,YAWGZ,EAAKY,mBAtF1B,GAA8BE,IAAMC,Y,uBCD9BC,G,MAAU,SAAAC,GAAG,OAAIC,MAAM,GAAD,OAFX,kCAEW,OAAeD,IACxCE,MAAK,SAACC,GACL,IAAKA,EAAOC,GACV,MAAM,IAAIC,MAAJ,UAAaF,EAAOG,OAApB,cAAgCH,EAAOI,aAG/C,OAAOJ,EAAOK,YCJLC,EAAb,4MACE1C,MAAQ,CACN2C,KAAM,IAFV,uDAME,WACElC,KAAKmC,aAPT,gCAUE,SAAmBC,GACbA,EAAUjB,SAAWnB,KAAKC,MAAMkB,QAClCnB,KAAKmC,aAZX,6DAgBE,4BAAAE,EAAA,sEDPqBlB,ECQQnB,KAAKC,MAAMkB,ODRTI,EAAQ,UAAD,OAAWJ,ICOjD,OACQe,EADR,OAGElC,KAAKJ,SAAS,CAAEsC,KAAMA,EAAKI,OAH7B,iCDPqB,IAAAnB,ICOrB,YAhBF,0EAsBE,WAAU,IAAD,OACCe,EAASlC,KAAKT,MAAd2C,KAER,OACE,yBAAKvB,UAAU,eACb,wBAAIA,UAAU,sBACZ,+CAEGuB,EAAKjB,KAIV,wBAAIN,UAAU,qBAAqBuB,EAAKK,MACxC,uBAAG5B,UAAU,sBAAsBuB,EAAKM,OACxC,uBAAG7B,UAAU,sBAAsBuB,EAAKO,OAExC,4BACE9B,UAAU,iCAIVC,KAAK,SACLQ,QAAS,WACP,EAAKnB,MAAME,aAAa,KAP5B,cAtCR,GAAiCkB,IAAMC,WCmDxBoB,E,4MAhDbnD,MAAQ,CACNW,MAAO,GACPE,eAAgB,G,uDAGlB,WAAqB,IAAD,OFDQmB,EAAQ,UEG/BG,MAAK,SAACxB,GACL,EAAKN,SAAS,CAAEM,MAAOA,EAAMoC,Y,oBAInC,WAAU,IAAD,OACP,EAAkCtC,KAAKT,MAA/BW,EAAR,EAAQA,MAAOE,EAAf,EAAeA,eAEf,OACE,yBAAKO,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACET,MAAOA,EACPE,eAAgBA,EAChBD,aAAc,SAACgB,GACT,EAAK5B,MAAMa,iBAAmBe,GAChC,EAAKvB,SAAS,CAAEQ,eAAgBe,QAMxC,yBAAKR,UAAU,gBACb,yBAAKA,UAAU,0BACZP,EACC,kBAAC,EAAD,CACEe,OAAQf,EACRD,aAAc,SAACgB,GACT,EAAK5B,MAAMa,iBAAmBe,GAChC,EAAKvB,SAAS,CAAEQ,eAAgBe,OAIpC,0B,GAzCEE,IAAMC,WCHxBqB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.67bd7a64.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    sortBy: 'All',\n  }\n\n  queryChange = (event) => {\n    this.setState({ query: event.target.value });\n  }\n\n  showFilter = (event) => {\n    this.setState({ sortBy: event.target.value });\n  }\n\n  render() {\n    const { todos, selectedUser, selectedUserId } = this.props;\n\n    let visibleTodos = todos.filter(\n      todo => todo.title && todo.title.includes(this.state.query),\n    );\n\n    if (this.state.sortBy === 'Active') {\n      visibleTodos = visibleTodos.filter(todo => todo.completed === false);\n    }\n\n    if (this.state.sortBy === 'Completed') {\n      visibleTodos = visibleTodos.filter(todo => todo.completed === true);\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <input\n          type=\"text\"\n          value={this.state.query}\n          onChange={this.queryChange}\n          placeholder=\"Enter something\"\n        />\n        <select\n          value={this.state.sortBy}\n          onChange={this.showFilter}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Active\">Active</option>\n          <option value=\"Completed\">Completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item ${todo.completed\n                  ? 'TodoList__item--checked'\n                  : 'TodoList__item--unchecked'}`}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                {selectedUserId === todo.userId ? (\n                  <button\n                    className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                    type=\"button\"\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                ) : (\n                  <button\n                    className=\"\n                    TodoList__user-button\n                    button\n                  \"\n                    type=\"button\"\n                    onClick={() => {\n                      selectedUser(todo.userId);\n                    }}\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape().isRequired,\n  ).isRequired,\n  selectedUser: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n};\n","// https://mate-api.herokuapp.com/todos\nconst BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((result) => {\n    if (!result.ok) {\n      throw new Error(`${result.status} - ${result.statusText}`);\n    }\n\n    return result.json();\n  });\n\nexport const getTodos = () => request('/todos');\n\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user: user.data });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          className=\"\n                TodoList__user-button\n                button\n              \"\n          type=\"button\"\n          onClick={() => {\n            this.props.selectedUser(0);\n          }}\n        >\n          Clear\n        </button>\n\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectedUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({ todos: todos.data });\n      });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            selectedUser={(userId) => {\n              if (this.state.selectedUserId !== userId) {\n                this.setState({ selectedUserId: userId });\n              }\n            }}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                selectedUser={(userId) => {\n                  if (this.state.selectedUserId !== userId) {\n                    this.setState({ selectedUserId: userId });\n                  }\n                }}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}